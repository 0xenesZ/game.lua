-- Game Variables
local cards = { "Bonus 100", "Bonus 200", "Bonus 300", "Extra Roll", "Lose 100", "Lose 200", "Lose 300", "Swap Points", "Double Points" }
local successText = 'Success'
local failedText = 'Failed'
local timeout = 60  -- 60 saniye (1 dakika) zaman aşımı
local timer = nil  -- Zamanlayıcıyı saklamak için
local members = {}
local pointsList = {}
local rankList = {}
local currentTurnIndex = 1

local function getRandomElement(list)
    return list[math.random(1, #list)]
end

local function calculatePoints(diceNumber, cardText, points)
    if diceNumber > 1 then
        if cardText == "Bonus 100" then
            points = points + 110
        elseif cardText == "Bonus 200" then
            points = points + 220
        elseif cardText == "Bonus 300" then
            points = points + 330
        elseif cardText == "Lose 100" then
            points = points - 90
        elseif cardText == "Lose 200" then
            points = points - 190
        elseif cardText == "Lose 300" then
            points = points - 290
        elseif cardText == "Extra Roll" then
            points = points + diceNumber * 2
        elseif cardText == "Swap Points" then
            local swapId = getRandomElement(getMembers())
            points, pointsList[swapId] = pointsList[swapId], points
        elseif cardText == "Double Points" then
            points = points * 2
        end
    else
        points = 0
    end
    return points
end

local function getNextTurn()
    currentTurnIndex = currentTurnIndex % #turnOrder + 1
    return turnOrder[currentTurnIndex]
end

local function startTimer()
    if timer then timer:stop() end
    timer = uv.new_timer()
    timer:start(timeout * 1000, 0, function()
        print("[LOG] Turn skipped due to timeout")
        skipTurn()
    end)
end

-- Handler Functions

local function handleRollDiceAndDrawCard(Msg)
    local currentTurn = getCurrentTurn()
    if Msg.From ~= currentTurn then
        ao.send({ Target = Msg.From, Action = "Error", Data = "It's not your turn!" })
        return
    end

    if timer then timer:stop() end
    
    local diceNumber = math.random(1, 6)
    local diceText = diceNumber > 1 and successText or failedText
    local cardText = getRandomElement(cards)
    local points = (pointsList[Msg.From] or 0) + diceNumber
    points = calculatePoints(diceNumber, cardText, points)
    
    pointsList[Msg.From] = points
    members[Msg.From] = true
    
    ao.send({
        Target = Msg.From,
        Action = "RollDiceAndDrawCardResult",
        Data = "Dice: " .. diceText .. ", Card: " .. cardText .. ", Total Points: " .. points
    })
    
    local nextTurn = getNextTurn()
    ao.send({ Target = nextTurn, Action = "YourTurn", Data = "It's your turn now!" })
    startTimer()
end

Handlers.add(
    "HandlerRollDiceAndDrawCard",
    Handlers.utils.hasMatchingTag("Action", "RollDiceAndDrawCard"),
    handleRollDiceAndDrawCard
)

Handlers.add(
    "HandlerJoinGame",
    Handlers.utils.hasMatchingTag("Action", "JoinGame"),
    function(Msg)
        members[Msg.From] = true
        ao.send({ Target = Msg.From, Action = "JoinGameResult", Data = "You have joined the game!" })
    end
)

Handlers.add(
    "HandlerGetMembers",
    Handlers.utils.hasMatchingTag("Action", "GetMembers"),
    function(Msg)
        local retText = 'Members:\n'
        for i, member in ipairs(members) do
            retText = retText .. i .. ": " .. member .. "\n"
        end
        ao.send({ Target = Msg.From, Action = "MembersList", Data = retText })
    end
)

